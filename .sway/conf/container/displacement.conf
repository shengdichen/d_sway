# inner-workspace displacement {{{
# available as COMMAND:
#       move left|right|up|down [<px> px]
#       move [absolute] position <pos_x> [px] <pos_y> [px]
#       move [absolute] position center
#       move position cursor|mouse|pointer

bindsym {
    $mod+Shift+h move left
    $mod+Shift+j move down
    $mod+Shift+k move up
    $mod+Shift+l move right
}
# }}}

# cross-workspace displacement {{{
# available as COMMAND:
#       move [--no-auto-back-and-forth] [container|window] [to] workspace [number] <name>
#       move [container|window] [to] workspace prev|next|current
#       move [container|window] [to] workspace prev_on_output|next_on_output
#       move [container|window] [to] workspace back_and_forth

bindsym {
    $mod+Shift+1 move container to workspace $ws0
    $mod+Shift+2 move container to workspace $ws1
    $mod+Shift+3 move container to workspace $ws2
    $mod+Shift+4 move container to workspace $ws3
    $mod+Shift+5 move container to workspace $ws4
    $mod+Shift+6 move container to workspace $ws5
    $mod+Shift+7 move container to workspace $ws6
    $mod+Shift+8 move container to workspace $ws7
    $mod+Shift+9 move container to workspace $ws8
    $mod+Shift+0 move container to workspace $ws9
}
# }}}

# cross-output displacement {{{
# available as COMMAND:
#       move [container|window] [to] output <name-or-id>|current
#       move [container|window] [to] output up|right|down|left
# }}}

# misc displacement {{{
#       move [container|window] [to] scratchpad
#       move [container|window] [to] mark <mark>

bindsym {
    $mod+shift+s move scratchpad
}

# available as COMMAND:
#       swap container with id|con_id|mark <arg>
# }}}

# vim: filetype=swayconfig foldmethod=marker
