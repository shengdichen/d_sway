# inner-workspace navigation {{{
# available as COMMAND:
#       <criteria> focus
#       focus up|right|down|left
#       focus prev|next [sibling]
#       focus child
#       focus parent

bindsym {
    $mod+comma \
        fullscreen disable; \
        focus parent

    $mod+period \
        fullscreen disable; \
        focus child
}

bindsym {
    $mod+grave \
        fullscreen toggle

    $mod+h \
        fullscreen disable; \
        focus left

    $mod+j \
        fullscreen disable; \
        focus down

    $mod+k \
        fullscreen disable; \
        focus up

    $mod+l \
        fullscreen disable; \
        focus right
}
# }}}

# cross-output navigation {{{
# available as COMMAND:
#       focus output up|right|down|left
#       focus output <name>

bindsym {
    $mod+Right \
        focus output right

    $mod+Up \
        focus output up

    $mod+Left \
        focus output left

    $mod+Down \
        focus output down
}
# }}}

# misc {{{
# available as COMMAND:
#       focus tiling
#       focus floating
#       focus mode_toggle
# }}}

# available as COMMAND&OPTION:
#       focus_follows_mouse yes|no|always
#       focus_on_window_activation smart|urgent|focus|none
#       focus_wrapping yes|no|force|workspace
#       mouse_warping output|container|none
#       no_focus <criteria>

focus_follows_mouse no

# If the window requesting focus is on an active workspace, it will receive the focus.
# Otherwise, the urgency hint will be set.
#       focus_on_window_activation smart
#
# always switch to the new window even if on an inactive workspace, since
# cross-workspace switching is cheap
focus_on_window_activation focus

# do not wrap, ever
focus_wrapping no

# vim: filetype=swayconfig foldmethod=marker
