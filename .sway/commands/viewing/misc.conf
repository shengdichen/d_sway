#   Makes focused view fullscreen, non-fullscreen, or the opposite of what it
#   is now. If no argument is given, it does the same as toggle. If global is
#   specified, the view will be fullscreen across all outputs.
#       fullscreen [enable|disable|toggle] [global]

#   Set/unset an idle inhibitor for the view. focus will inhibit idle when the
#   view is focused by any seat. fullscreen will inhibit idle when the view is
#   fullscreen (or a descendant of a fullscreen container) and is visible. open
#   will inhibit idle until the view is closed (or the inhibitor is
#   unset/changed).  visible will inhibit idle when the view is visible on any
#   output. none will remove any existing idle inhibitor for the view.
#
#   This can also be used with criteria to set an idle inhibitor for any
#   existing view or with for_window to set idle inhibitors for future views.
#       inhibit_idle focus|fullscreen|open|none|visible

#   Works together with output max_render_time to reduce the latency even
#   further by delaying the frame callbacks sent to a surface. When set to a
#   positive number of milliseconds, delays the frame callback in such a way
#   that the surface has the specified number of milliseconds to render and
#   commit new contents before being sampled by the compositor for the next
#   presentation. See max_render_time in sway-output(5) for further details.
#
#   To set this up for optimal latency:
#
#   1.  Set up output max_render_time.
#   2.  Put the target application in full-screen and have it continuously render
#       something.
#   3.  Start by setting max_render_time 1. If the application drops frames,
#       increment by 1.
#
#       max_render_time off|<msec>
