// input {{{
input {
    keyboard {
        xkb {
            layout "us,ch(fr),ru(phonetic)"
            // options "grp:win_space_toggle,compose:ralt,ctrl:nocaps"
            options "caps:escape,lv2:lsgt_switch"
        }
        track-layout "global"
    }

    touchpad {
        tap
        dwt
        dwtp
        natural-scroll
        accel-speed 1.0
        accel-profile "flat"
    }

    mouse {
        accel-speed 1.0
        accel-profile "flat"
    }

    // Uncomment this to make the mouse warp to the center of newly focused windows.
    // warp-mouse-to-focus
}
// }}}

// output {{{
// $ niri msg outputs
// off
// variable-refresh-rate

output "DP-2" {
    mode "3840x2160@59.997"
    position x=0 y=0
}

output "HDMI-A-2" {
    mode "2560x1440@74.968"
    transform "270"
    position x=9000 y=0
}
// }}}

layout {
    gaps 0

    // center-focused-column "on-overflow"
    center-focused-column "never"
    default-column-width { proportion 0.66667; }

    // You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667

        // fixed 1920
    }

    // By default focus ring and border are rendered as a solid background rectangle
    // behind windows. That is, they will show up through semitransparent windows.
    // This is because windows using client-side decorations can have an arbitrary shape.
    //
    // If you don't like that, you should uncomment `prefer-no-csd` below.
    // Niri will draw focus ring and border *around* windows that agree to omit their
    // client-side decorations.
    //
    // Alternatively, you can override it with a window rule called
    // `draw-border-with-background`.

    focus-ring {
        off
        active-color "#97879f"
        inactive-color "#2b272f"
    }
    border {
        off
        active-color "#97879f"
        inactive-color "#2b272f"
    }
    struts {
        left 0
        right 0
        top 0
        bottom 0
    }
}

prefer-no-csd

// You can change the path where screenshots are saved.
// A ~ at the front will be expanded to the home directory.
// The path is formatted with strftime(3) to give you the screenshot date and time.
screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

// You can also set this to null to disable saving screenshots to disk.
// screenshot-path null

// Animation settings.
// The wiki explains how to configure individual animations:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Animations
animations {
    // Uncomment to turn off all animations.
    // off
}

// Window rules let you adjust behavior for individual windows.
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Window-Rules

window-rule {
    opacity 0.90625
}

window-rule {
    // This regular expression is intentionally made as specific as possible,
    // since this is the default config, and we want no false positives.
    // You can get away with just app-id="wezterm" if you want.
    match app-id=r#"^org\.wezfurlong\.wezterm$"#
    default-column-width {}
}

// Example: block out two password managers from screen capture.
// (This example rule is commented out with a "/-" in front.)
/-window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#

    block-out-from "screen-capture"

    // Use this instead if you want them visible on third-party screenshot tools.
    // block-out-from "screencast"
}

binds {
    // $ niri msg action <niri_command>

    Mod+Return { spawn "foot"; }
    // You can also use a shell:
    // <KEY> { spawn "bash" "-c" "<cmd>"; }
    // <KEY> { spawn "bash" "-c" "<cmd>"; }
    //  Mod+D { spawn "fuzzel"; }
    //  Super+Alt+L { spawn "swaylock"; }

    Mod+Q { close-window; }

    // focus {{{
    //  focus-window-down
    //          Focus the window below
    //  focus-window-up
    //          Focus the window above
    // Mod+J     { focus-window-down; }
    // Mod+K     { focus-window-up; }

    //  focus-column-left
    //          Focus the column to the left
    //  focus-column-right
    //          Focus the column to the right
    //  focus-column-first
    //          Focus the first column
    //  focus-column-last
    //          Focus the last column
    Mod+H     { focus-column-left; }
    Mod+L     { focus-column-right; }
    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }

    // workspace {{{
    //  focus-workspace-down
    //          Focus the workspace below
    //  focus-workspace-up
    //          Focus the workspace above
    //  Mod+Page_Down      { focus-workspace-down; }
    //  Mod+Page_Up        { focus-workspace-up; }
    //  Mod+U              { focus-workspace-down; }
    //  Mod+I              { focus-workspace-up; }

    //  focus-workspace
    //          Focus a workspace by reference (index or name)
    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }

    //  focus-workspace-previous
    //          Focus the previous workspace
    // Switches focus between the current and the previous workspace.
    Mod+Tab { focus-workspace-previous; }
    // }}}

    // Alternative commands that move across workspaces when reaching
    // the first or last window in a column.
    //  focus-window-or-workspace-down
    //          Focus the window or the workspace above
    //  focus-window-or-workspace-up
    //          Focus the window or the workspace above
    Mod+J     { focus-window-or-workspace-down; }
    Mod+K     { focus-window-or-workspace-up; }

    // monitor {{{
    //  focus-monitor-left
    //          Focus the monitor to the left
    //  focus-monitor-right
    //          Focus the monitor to the right
    //  focus-monitor-down
    //          Focus the monitor below
    //  focus-monitor-up
    //          Focus the monitor above
    Mod+Left  { focus-monitor-left; }
    Mod+Down  { focus-monitor-down; }
    Mod+Up    { focus-monitor-up; }
    Mod+Right { focus-monitor-right; }
    // }}}
    // }}}

    // move {{{
    // window {{{
    //  move-window-down
    //          Move the focused window down in a column
    //  move-window-up
    //          Move the focused window up in a column
    Mod+Shift+K     { move-window-up; }
    Mod+Shift+J     { move-window-down; }

    //  consume-window-into-column
    //          Consume the window to the right into the focused column
    //  expel-window-from-column
    //          Expel the focused window from the column
    Mod+Comma  { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }

    // There are also commands that consume or expel a single window to the side.
    //  consume-or-expel-window-left
    //          Consume or expel the focused window left
    //  consume-or-expel-window-right
    //          Consume or expel the focused window right
    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    //  move-window-to-workspace-down
    //          Move the focused window to the workspace below
    //  move-window-to-workspace-up
    //          Move the focused window to the workspace above
    //  move-window-to-workspace
    //          Move the focused window to a workspace by reference (index or name)
    Mod+Shift+1 { move-window-to-workspace 1; }
    Mod+Shift+2 { move-window-to-workspace 2; }
    Mod+Shift+3 { move-window-to-workspace 3; }
    Mod+Shift+4 { move-window-to-workspace 4; }
    Mod+Shift+5 { move-window-to-workspace 5; }
    Mod+Shift+6 { move-window-to-workspace 6; }
    Mod+Shift+7 { move-window-to-workspace 7; }
    Mod+Shift+8 { move-window-to-workspace 8; }
    Mod+Shift+9 { move-window-to-workspace 9; }

    //  move-window-down-or-to-workspace-down
    //          Move the focused window down in a column or to the workspace below
    //  move-window-up-or-to-workspace-up
    //          Move the focused window up in a column or to the workspace above
    // Mod+Ctrl+J     { move-window-down-or-to-workspace-down; }
    // Mod+Ctrl+K     { move-window-up-or-to-workspace-up; }

    //  move-window-to-monitor-left
    //          Move the focused window to the monitor to the left
    //  move-window-to-monitor-right
    //          Move the focused window to the monitor to the right
    //  move-window-to-monitor-down
    //          Move the focused window to the monitor below
    //  move-window-to-monitor-up
    //          Move the focused window to the monitor above
    // Alternatively, there are commands to move just a single window:
    // Mod+Shift+Ctrl+Left  { move-window-to-monitor-left; }
    // ...
    Mod+Shift+Left  { move-window-to-monitor-left; }
    Mod+Shift+Down  { move-window-to-monitor-down; }
    Mod+Shift+Up    { move-window-to-monitor-up; }
    Mod+Shift+Right { move-window-to-monitor-right; }
    // }}}

    // move: column {{{
    //  move-column-left
    //          Move the focused column to the left
    //  move-column-right
    //          Move the focused column to the right
    //  move-column-to-first
    //          Move the focused column to the start of the workspace
    //  move-column-to-last
    //          Move the focused column to the end of the workspace
    Mod+Shift+H     { move-column-left; }
    Mod+Shift+L     { move-column-right; }
    Mod+Shift+Home { move-column-to-first; }
    Mod+Shift+End  { move-column-to-last; }

    // move: column to workspace
    //  move-column-to-workspace-down
    //          Move the focused column to the workspace below
    //  move-column-to-workspace-up
    //          Move the focused column to the workspace above
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }
    Mod+Ctrl+U         { move-column-to-workspace-down; }
    Mod+Ctrl+I         { move-column-to-workspace-up; }
    //  move-column-to-workspace
    //          Move the focused column to a workspace by reference (index or name)
    // Mod+Shift+1 { move-column-to-workspace 1; }
    // Mod+Shift+2 { move-column-to-workspace 2; }
    // Mod+Shift+3 { move-column-to-workspace 3; }
    // Mod+Shift+4 { move-column-to-workspace 4; }
    // Mod+Shift+5 { move-column-to-workspace 5; }
    // Mod+Shift+6 { move-column-to-workspace 6; }
    // Mod+Shift+7 { move-column-to-workspace 7; }
    // Mod+Shift+8 { move-column-to-workspace 8; }
    // Mod+Shift+9 { move-column-to-workspace 9; }

    //  move-column-to-monitor-left
    //          Move the focused column to the monitor to the left
    //  move-column-to-monitor-right
    //          Move the focused column to the monitor to the right
    //  move-column-to-monitor-down
    //          Move the focused column to the monitor below
    //  move-column-to-monitor-up
    //          Move the focused column to the monitor above
    Mod+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Ctrl+Right { move-column-to-monitor-right; }
    // }}}

    // move: workspace {{{
    //  move-workspace-down
    //          Move the focused workspace down
    //  move-workspace-up
    //          Move the focused workspace up
    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }
    Mod+Shift+U         { move-workspace-down; }
    Mod+Shift+I         { move-workspace-up; }

    // move: workspace to monitor
    //  move-workspace-to-monitor-left
    //          Move the focused workspace to the monitor to the left
    //  move-workspace-to-monitor-right
    //          Move the focused workspace to the monitor to the right
    //  move-workspace-to-monitor-down
    //          Move the focused workspace to the monitor below
    //  move-workspace-to-monitor-up
    //          Move the focused workspace to the monitor above
    // And you can also move a whole workspace to another monitor:
    // Mod+Shift+Ctrl+Left  { move-workspace-to-monitor-left; }
    // ...
    Mod+Ctrl+Shift+Left  { move-workspace-to-monitor-left; }
    Mod+Ctrl+Shift+Down  { move-workspace-to-monitor-down; }
    Mod+Ctrl+Shift+Up    { move-workspace-to-monitor-up; }
    Mod+Ctrl+Shift+Right { move-workspace-to-monitor-right; }
    // }}}
    // }}}








    // resize {{{
    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { reset-window-height; }
    Mod+Grave { maximize-column; }
    Mod+Shift+Grave { fullscreen-window; }
    Mod+F { center-column; }

    // NOTE:
    //  pixel, absolute: "100"
    //  pixel, relative: "-+5"
    //  percent, absolute: "25%"
    //  percent, relative: "+-5%"
    // NOTE:
    //  Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    //  set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }
    // }}}

    // misc {{{
    // Mod+Shift+Slash { show-hotkey-overlay; }

    Mod+Space       { switch-layout "next"; }
    Mod+Shift+Space { switch-layout "prev"; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // The quit action will show a confirmation dialog to avoid accidental exits.
    Mod+Shift+E { quit; }

    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    Mod+Shift+P { power-off-monitors; }

    // Example volume keys mappings for PipeWire & WirePlumber.
    // The allow-when-locked=true property makes them work even when the session is locked.
    //  XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
    //  XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }
    //  XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    //  XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }

    // Usually scrolling up and down with Shift in applications results in
    // horizontal scrolling; these binds replicate that.
    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    // Similarly, you can bind touchpad scroll "ticks".
    // Touchpad scrolling is continuous, so for these binds it is split into
    // discrete intervals.
    // These binds are also affected by touchpad's natural-scroll, so these
    // example binds are "inverted", since we have natural-scroll enabled for
    // touchpads by default.
    // Mod+TouchpadScrollDown { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02+"; }
    // Mod+TouchpadScrollUp   { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02-"; }



    // You can bind mouse wheel scroll ticks using the following syntax.
    // These binds will change direction based on the natural-scroll setting.
    //
    // To avoid scrolling through workspaces really fast, you can use
    // the cooldown-ms property. The bind will be rate-limited to this value.
    // You can set a cooldown on any bind, but it's most useful for the wheel.
    //  Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    //  Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    //  Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    //  Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    //  Mod+WheelScrollRight      { focus-column-right; }
    //  Mod+WheelScrollLeft       { focus-column-left; }
    //  Mod+Ctrl+WheelScrollRight { move-column-right; }
    //  Mod+Ctrl+WheelScrollLeft  { move-column-left; }
    // }}}
}

cursor {
    // xcursor-theme "capitaine-cursors-light"
    xcursor-theme "capitaine-cursors"
    xcursor-size 24
}

// vim: foldmethod=marker
