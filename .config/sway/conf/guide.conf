# notable documentation sources {{{
#   sway(1)
#   ->  general information
#   sway(5)
#   ->  actual documentation
#   swaymsg(1)
#   ->  passing commands to sway socket

# sway-ouptut(5) {{{
# available as COMMAND&OPTION:
#       output <output> <output-subcommands...>
#
# NOTE:
#   1.  obtain <output> with:
#       $ swaymsg -t get_outputs
# }}}

# sway-input(5) {{{
# available as COMMAND&OPTION:
#       input <input> <input-subcommands...>
#       seat <seat> <seat-subcommands...>
#
# NOTE:
#   1.  obtain <input> and <seat> with:
#   ->  $ swaymsg -t get_inputs
#   ->  $ swaymsg -t get_seats
# }}}
# }}}

# general config {{{
#   Interactions with sway:
#   1.  run with swaymsg
#   ->  $ swaymsg <sway_command>
#   ->  e.g. inquire about sway socket
#       $ swaymsg -t <socket_inquiry>
#   2.  specify in config
#   3.  execute as key-bind

#   Configurations of sway:
#   1.  the |command|s
#       ->  swaymsg; key-bind
#
#   2.  the |option|s
#       ->  config
#
#   3.  the |command|&|option|s
#       ->  swaymsg; config; key-bind

# config-formatting {{{
# break longer commands apart by appending '\' at the end

# lines of commands sharing common beginning can be grouped:
#       <common_beginning> {
#           <individual_command1>
#           <individual_command2>
#       }
# is equivalent to:
#       <common_beginning> <individual_command1>
#       <common_beginning> <individual_command2>
# }}}
# }}}

# common elements {{{
# available as OPTION:
#       include <path>

# available as COMMAND&OPTION:
#       set $<name> <value>

# available as COMMAND&OPTION:
#       mode <mode>
#       mode [--pango_markup] <mode> <mode-subcommands...>

# available as COMMAND&OPTION:
#       exec <shell command>
#       exec_always <shell command>

# bindings {{{
# available as COMMAND&OPTION:
#       bindsym <...>
#       bindcode <...>
#       bindswitch <...>
#       unbindswitch <...>
#       unbindsym <...>
#       unbindcode <...>

# NOTE:
#   1.  finding key-codes:
#       1.  view all key-codes
#       ->  $ xmodmap -pke
#       2.  [X11] dynamically view key-codes:
#       ->  $ xev
# }}}
# }}}

# available as COMMAND:
#       nop <comment>
#       exit
#       reload

# workspace {{{
# available as COMMAND:
#       move workspace [to] output <name-or-id>|current
#       move workspace to [output] <name-or-id>|current
#       move workspace [to] output up|right|down|left
#       move workspace to [output] up|right|down|left

# available as OPTION:
#       workspace_layout default|stacking|tabbed

# available as COMMAND:
#       rename workspace [<old_name>] to <new_name>
# }}}

# inner-workspace displacement {{{
# available as COMMAND:
#       move left|right|up|down [<px> px]
#       move [absolute] position <pos_x> [px] <pos_y> [px]
#       move [absolute] position center
#       move position cursor|mouse|pointer
# }}}

# cross-workspace displacement {{{
# available as COMMAND:
#       move [--no-auto-back-and-forth] [container|window] [to] workspace [number] <name>
#       move [container|window] [to] workspace prev|next|current
#       move [container|window] [to] workspace prev_on_output|next_on_output
#       move [container|window] [to] workspace back_and_forth
# }}}

# cross-output displacement {{{
# available as COMMAND:
#       move [container|window] [to] output <name-or-id>|current
#       move [container|window] [to] output up|right|down|left
# }}}

# misc displacement {{{
#       move [container|window] [to] scratchpad
#       move [container|window] [to] mark <mark>

# available as COMMAND:
#       swap container with id|con_id|mark <arg>
# }}}

# available as COMMAND:
#       fullscreen [enable|disable|toggle] [global]

# inner-workspace navigation {{{
# available as COMMAND:
#       <criteria> focus
#       focus up|right|down|left
#       focus prev|next [sibling]
#       focus child
#       focus parent
# }}}

# cross-workspace navigation {{{
# available as COMMAND&OPTION:
#       workspace [--no-auto-back-and-forth] [number] <name>
#       workspace prev|next
#       workspace prev_on_output|next_on_output
#       workspace back_and_forth
#       workspace_auto_back_and_forth yes|no
#       assign <criteria> [→] [workspace] [number] <workspace>
# }}}

# cross-output navigation {{{
# available as COMMAND&OPTION:
#       workspace <name> output <outputs...>
#       assign <criteria> [→] output left|right|up|down|<name>

# available as COMMAND:
#       focus output up|right|down|left
#       focus output <name>
# }}}

# misc {{{
# available as COMMAND&OPTION:
#       for_window <criteria> <command>

# available as COMMAND:
#       inhibit_idle focus|fullscreen|open|none|visible

# available as COMMAND&OPTION:
#       kill
# }}}

# available as COMMAND&OPTION:
#       mark --add|--replace [--toggle] <identifier>
#       show_marks yes|no
#       unmark [<identifier>]

# available as COMMAND&OPTION:
#       floating_maximum_size <width> x <height>
#       floating_minimum_size <width> x <height>
#       floating_modifier <modifier> [normal|inverse]

# available as COMMAND:
#       floating enable|disable|toggle
#       sticky enable|disable|toggle

# available as COMMAND:
#       focus tiling
#       focus floating
#       focus mode_toggle

# available as COMMAND:
#       scratchpad show

# available as COMMAND&OPTION:
#       focus_follows_mouse yes|no|always
#       focus_on_window_activation smart|urgent|focus|none
#       focus_wrapping yes|no|force|workspace
#       mouse_warping output|container|none
#       no_focus <criteria>

# vim: filetype=swayconfig foldmethod=marker
