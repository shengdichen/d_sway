# available as COMMAND:
#       fullscreen [enable|disable|toggle] [global]

# inner-workspace navigation {{{
# available as COMMAND:
#       <criteria> focus
#       focus up|right|down|left
#       focus prev|next [sibling]
#       focus child
#       focus parent

bindsym {
    $mod+comma \
        fullscreen disable; \
        focus parent

    $mod+period \
        fullscreen disable; \
        focus child
}

bindsym {
    $mod+z \
        fullscreen toggle

    $mod+h \
        fullscreen disable; \
        focus left

    $mod+j \
        fullscreen disable; \
        focus down

    $mod+k \
        fullscreen disable; \
        focus up

    $mod+l \
        fullscreen disable; \
        focus right
}
# }}}

# cross-workspace {{{
# available as COMMAND&OPTION:
#       workspace [--no-auto-back-and-forth] [number] <name>
#       workspace prev|next
#       workspace prev_on_output|next_on_output
#       workspace back_and_forth
#       workspace_auto_back_and_forth yes|no
#       assign <criteria> [→] [workspace] [number] <workspace>

workspace_auto_back_and_forth no

# switch to workspace
bindsym {
    $mod+1 workspace $ws0
    $mod+2 workspace $ws1
    $mod+3 workspace $ws2
    $mod+4 workspace $ws3
    $mod+5 workspace $ws4
    $mod+6 workspace $ws5
    $mod+7 workspace $ws6
    $mod+8 workspace $ws7
    $mod+9 workspace $ws8
    $mod+0 workspace $ws9
}

# quick switch to the last active workspace
bindsym $mod+Tab workspace back_and_forth
# }}}

bindsym {
    $mod+p workspace "HOLD"
    $mod+Shift+p exec python ~/.config/sway/src/sway.py hold-add-current
    $mod+Shift+Return exec python ~/.config/sway/src/sway.py hold-split
    $mod+Shift+Tab exec python ~/.config/sway/src/sway.py hold-swap
}

bindsym $mod+F1 exec python ~/.config/sway/src/sway.py test

# cross-output {{{
# available as COMMAND&OPTION:
#       workspace <name> output <outputs...>
#       assign <criteria> [→] output left|right|up|down|<name>

# available as COMMAND:
#       focus output up|right|down|left
#       focus output <name>

bindsym {
    $mod+Right \
        focus output right

    $mod+Up \
        focus output up

    $mod+Left \
        focus output left

    $mod+Down \
        focus output down
}
# }}}

# misc {{{
# available as COMMAND:
#       focus tiling
#       focus floating
#       focus mode_toggle
bindsym $mod+f focus mode_toggle

# available as COMMAND:
#       scratchpad show
bindsym $mod+s scratchpad show
# }}}

# available as COMMAND&OPTION:
#       focus_follows_mouse yes|no|always
#       focus_on_window_activation smart|urgent|focus|none
#       focus_wrapping yes|no|force|workspace
#       mouse_warping output|container|none
#       no_focus <criteria>

focus_follows_mouse no

# If the window requesting focus is on an active workspace, it will receive the focus.
# Otherwise, the urgency hint will be set.
#       focus_on_window_activation smart
#
# always switch to the new window even if on an inactive workspace, since
# cross-workspace switching is cheap
focus_on_window_activation focus

# do not wrap, ever
focus_wrapping no

# vim: filetype=swayconfig foldmethod=marker
